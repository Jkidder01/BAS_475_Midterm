library(fpp3)
library(shiny)
library(dplyr)
library(readr)
library(shinydashboard)
?`fpp3-package`
fpp3_packages()
crayon
library(crayon)
crayon
GHemis <- read.csv('Greenhouse-gas-emissions-industry-and-household-year-ended-2019-csv')
GHemis <- read_csv('Greenhouse-gas-emissions-industry-and-household-year-ended-2019-csv')
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHemis$year
as.Date(GHemis$year)
GHemis <- tsibble(GHemis, index = year, key = symbol)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHemis <- tsibble(GHemis, index = year, key = symbol)
GHemis <- tsibble(GHemis, index = year)
GHemis <- tsibble(GHemis, index = year, key = data_value)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHemis <- tsibble(GHemis, index = year, key = data_value)
duplicates(GHemis, key = data_value)
duplicates(GHemis, index = year)
GHemis[GHemis$variable==Methane & GHemis$units==Kilotonnes]
GHemis[GHemis$variable=='Methane' & GHemis$units=='Kilotonnes']
GHemis[GHemis$variable=='Methane']
GHemis[variable=='Methane' & units=='Kilotonnes']
GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane',]
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
duplicates(GHmethane)
duplicates(GHmethane,index=year)
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane' & GHemis$anzsic_descriptor=='Sheep, beef cattle, and grain farming',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane' & GHemis$anzsic_descriptor=='Sheep, beef cattle, and grain farming',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$anzsic_descriptor=='Sheep, beef cattle, and grain farming',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane' & GHemis$anzsic_descriptor=='Sheep, beef cattle, and grain farming',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
GHmethane
runApp()
renderplot({
ggplot(GHmethane, aes(year,data_value)) +
labs(title = "Methane Gas Emitted in KiloTonnes")
})
runApp()
renderPlot({
ggplot(GHmethane, aes(year,data_value)) +
labs(title = "Methane Gas Emitted in KiloTonnes")
})
runApp()
output$MethaneTS <- renderPlot({
ggplot(GHmethane, aes(year,data_value)) +
geom_line()+
labs(title = "Methane Gas Emitted in KiloTonnes")
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(GHemis$anzsic_descriptor)
runApp()
runApp()
runApp()
gg_season(GHmethane)
runApp()
runApp()
gg_season(GHmethane$data_value)
output$anaplot <- gg_season(GHmethane$data_value)
plotOutput('anaplot')
runApp()
runApp()
runApp()
gg_season(GHmethane)
gg_season(GHmethane,y = data_value)
GHmethane
gg_season(GHmethane,y = data_value,period = year)
as.Date(GHmethane$year)
as.Date(GHmethane)
gg_season(GHmethane,y = data_value,period = year)
class(GHmethane$year)
as.Date(GHmethane$year,year)
as.Date(GHmethane$year,'%y')
as.Date(GHmethane$year)
as.Date(GHmethane$year, origin = "yyyy")
as.Date(GHmethane$year, origin = "yyyy-mm-dd")
GHmethane$year
as.Date(GHmethane$year, origin = "2007")
order(GHmethane$year)
sort(GHmethane$year)
as.Date(sort(GHmethane$year), origin = "2007")
as.character.Date(GHmethane$year)
GHmethane$year <- as.character.Date(GHmethane$year)
gg_season(GHmethane,y = data_value,period = year)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane' & GHemis$anzsic_descriptor=='Dairy cattle farming',]
GHmethane$year <- as.character.Date(GHmethane$year)
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
as.Date.character(GHmethane$year)
GHemis <- read.csv('Greenhouse-gas-emissions.csv')
GHmethane <- GHemis[GHemis$units=='Kilotonnes' & GHemis$variable=='Methane' & GHemis$anzsic_descriptor=='Dairy cattle farming',]
GHmethane <- tsibble(GHmethane, index = year, key = data_value)
unique(GHemis$anzsic_descriptor)
GHmethane$year <- y(GHmethane$year)
ymd(GHmethane$year)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(fpp3)
library(shiny)
library(dplyr)
library(readr)
library(shinydashboard)
library(lubridate)
library(seasonal)
library(zoo)
runApp()
runApp()
shiny::runApp()
runApp()
plot(forecast(model(SNAIVE(Milk_ts)))
library(fpp3)
library(shiny)
library(dplyr)
library(readr)
library(shinydashboard)
library(lubridate)
library(seasonal)
library(zoo)
Milk <- read.table("Milk.txt",header = TRUE,sep = ",")
Milk$Date <- paste(Milk$Year, Milk$Month, sep = "-")
keep_cols <- c(
"Date", "Cotagecheese.Prod",
"Icecream.Prod", "Milk.Prod", "N.CA.Fat.Price"
)
Milk$Date <- yearmonth(Milk$Date)
Milk <- Milk[,keep_cols]
Milk_ts <- tsibble(Milk, index = Date, key = NULL)
plot(forecast(model(SNAIVE(Milk_ts)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts))
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts$Icecream.Prod))
fit %>%
forecast() %>%
autoplot(Milk_ts) +
labs(title = "Seasonal naïve model")
View(fit)
Milk <- read.table("Milk.txt",header = TRUE,sep = ",")
Milk$Date <- paste(Milk$Year, Milk$Month, sep = "-")
keep_cols <- c(
"Date", "Cotagecheese.Prod",
"Icecream.Prod", "Milk.Prod", "N.CA.Fat.Price"
)
Milk$Date <- yearmonth(Milk$Date)
Milk <- Milk[,keep_cols]
Milk_ts <- tsibble(Milk, index = Date, key = NULL)
output$Milk_Forecast <- renderPlot({
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts$Icecream.Prod))
fit %>%
forecast() %>%
autoplot(Milk_ts) +
labs(title = "Seasonal naïve model")
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts$Icecream.Prod))
fit %>%
forecast() %>%
autoplot(Milk_ts) +
labs(title = "Seasonal naïve model")
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts))
fit %>%
forecast() %>%
autoplot(Milk_ts) +
labs(title = "Seasonal naïve model")
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts$Icecream.Prod))
fit %>%
forecast() %>%
autoplot(Milk_ts) +
labs(title = "Seasonal naïve model")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit <- Milk_ts %>%
model(SNAIVE(Milk_ts$Icecream.Prod))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
